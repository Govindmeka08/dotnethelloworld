trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/publish'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildApp
        displayName: 'Build .NET 9 App'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '9.x.x'
              installationPath: $(Agent.ToolsDirectory)/UseDotNet

          - task: DotNetCoreCLI@2
            displayName: 'Restore Dependencies'
            inputs:
              command: 'restore'
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build Solution'
            inputs:
              command: 'build'
              projects: '**/*.csproj'
              arguments: '--configuration $(buildConfiguration)'
          
          - task: DotNetCoreCLI@2
            displayName: 'Publish Artifact'
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration $(buildConfiguration) --output $(outputDir)'
              zipAfterPublish: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(outputDir)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy Stage'
    dependsOn: Build
    jobs:
      - deployment: 'Deploy Stage'
        displayName: 'Deploy to Azure Web App'
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Deploy Artifact to Web App'
                  inputs:
                    azureSubscription: 'AZURE-SERVICE-CONNECTION-NAME'
                    appName: 'hello-dotnet9-webapp'
                    package: '$(Pipeline.Workspace)/drop/**/*.zip'            